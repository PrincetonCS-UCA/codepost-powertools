[tool.poetry]
name = "codepost-powertools"
version = "0.1.0"
description = "Some helpful codePost tools to aid with grading flow."
license = "MIT"
authors = ["Joseph Lou <jdlou@princeton.edu>"]
readme = "README.rst"
homepage = "https://codepost-powertools.readthedocs.io/en/latest/"
repository = "https://github.com/PrincetonCS-UCA/codepost-powertools"
documentation = "https://codepost-powertools.readthedocs.io/en/latest/"
keywords = [
  "codepost",
  "tools",
  "powertools",
  "Google Sheets",
  "Princeton",
  "COS126",
]
classifiers = [
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Topic :: Education",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
packages = [{include = "codepost_powertools", from = "src"}]

[tool.poetry.scripts]
cptools = "codepost_powertools.__main__:cli"

[tool.poetry.dependencies]
python = "^3.7.2"
click = "^8.1.3"
codepost = "^0.2.29"
comma = "^0.5.4"
importlib-metadata = {version = ">=1.0", python = "<3.8"}
loguru = "^0.6.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
isort = "^5.11.4"
mypy = "^0.991"
pylint = "^2.15.9"
pytest = "^7.2.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
# as of 2023-01-02, sphinx-rtd-theme v1.1.1 does not allow sphinx v6.0.0,
# released on 2022-12-29. Thus, I have to use sphinx@^5.3.0
sphinx = "^5.3.0"
sphinx-autobuild = "^2021.3.14"
sphinx-rtd-theme = "^1.1.1"
sphinx-toolbox = "^3.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
# Just setting the profile will use the `black` default line length of 88, so
# need to override line length as well
line_length = 79

[tool.mypy]

[[tool.mypy.overrides]]
module = [
  "codepost.*",
  "comma.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
# Can't use import mode "importlib" because test files import helpers
# See: https://docs.pytest.org/en/latest/explanation/pythonpath.html#import-modes
addopts = [
  "--import-mode=prepend",
  "--strict-markers",
]
pythonpath = "src"
testpaths = "tests"
markers = [
  "src_path: provides the path to the src module that needs to be mocked",
]
